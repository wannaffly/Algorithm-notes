题目描述
给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。
（注意：规定B[0] = A[1] * A[2] * ... * A[n-1]，B[n-1] = A[0] * A[1] * ... * A[n-2];）
对于A长度为1的情况，B无意义，故而无法构建，因此该情况不会存在。

#B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]
#从左到右算 B[i]=A[0]*A[1]*...*A[i-1]
#从右到左算B[i]*=A[i+1]*...*A[n-1]


class Solution:
    def multiply(self, A):
        # write code here
        n = len(A)
        B = [1] * n #初始化每一行为1的一维数组
        for i in range(1,n):
            B[i] = B[i-1] * A[i-1]
        tmp = 1
        for j in range(n-2,-1,-1):
            tmp = tmp * A[j+1]
            B[j] = B[j] * tmp
        return B
            